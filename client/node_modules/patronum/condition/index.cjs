"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.condition = condition;
var _effector = require("effector");
function condition({
  if: test,
  then: thenBranch,
  else: elseBranch,
  source = (0, _effector.createEvent)({
    name: "source",
    sid: "epke23"
  })
}) {
  const checker = _effector.is.unit(test) || isFunction(test) ? test : value => value === test;
  if (thenBranch && elseBranch) {
    (0, _effector.split)({
      and: [{
        source,
        match: {
          then: checker,
          else: inverse(checker)
        },
        cases: {
          then: thenBranch,
          else: elseBranch
        }
      }],
      or: {
        sid: "9tug3k"
      }
    });
  } else if (thenBranch) {
    (0, _effector.guard)({
      and: [{
        source,
        filter: checker,
        target: thenBranch
      }],
      or: {
        sid: "abznoh"
      }
    });
  } else if (elseBranch) {
    (0, _effector.guard)({
      and: [{
        source,
        filter: inverse(checker),
        target: elseBranch
      }],
      or: {
        sid: "-eb29qp"
      }
    });
  }
  return source;
}
function isFunction(value) {
  return typeof value === 'function';
}
function inverse(fnOrUnit) {
  if (_effector.is.unit(fnOrUnit)) {
    return fnOrUnit.map(value => !value);
  }
  return value => !fnOrUnit(value);
}