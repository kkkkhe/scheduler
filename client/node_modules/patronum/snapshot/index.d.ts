import { Effect, Store, Event } from 'effector';
declare type NoInfer<T> = [T][T extends any ? 0 : never];
export declare function snapshot<SourceType, TargetType = SourceType>({ source, clock, fn, }: {
    source: Store<SourceType>;
    clock?: Event<any> | Effect<any, any, any> | Store<any>;
    fn?(value: SourceType): TargetType;
}): Store<NoInfer<TargetType>>;
export {};
